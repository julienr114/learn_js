[
  {
  "name": "addition",
  "level": 1,
  "variables": ["(Math.floor(Math.random() * 6) + 1)", "(Math.floor(Math.random() * 6) + 1)"],
  "template": "(function (variables) { return variables[0] + ' + ' + variables[1] })",
  "result": "(function (variables) { return variables[0] + variables[1] })"
  },
  {
    "name": "subtraction",
    "level": 1,
    "variables": ["(Math.floor(Math.random() * 12) + 1)", "(Math.floor(Math.random() * 6) + 1)"],
    "template": "(function (variables) { return variables[0] + ' - ' + variables[1] })",
    "result": "(function (variables) { return variables[0] - variables[1] })"
  },
  {
    "name": "multiplication",
    "level": 2,
    "variables": ["(Math.floor(Math.random() * 10) + 1)", "(Math.floor(Math.random() * 10) + 1)"],
    "template": "(function (variables) { return variables[0] + ' * ' + variables[1] })",
    "result": "(function (variables) { return variables[0] * variables[1] })"
  },
  {
    "name": "division",
    "level": 2,
    "variables": ["(Math.floor( Math.random() * 6 / 2 ) * 2 + 6)", 2],
    "template": "(function (variables) { return variables[0] + ' / ' + variables[1] })",
    "result": "(function (variables) { return variables[0] / variables[1] })"
  },
  {
		"name": "var addition",
		"level": 3,
		"variables": ["(Math.floor(Math.random() * 6) + 1)", "(Math.floor(Math.random() * 6) + 1)"],
		"template": "(function (variables) { return 'var a = ' + variables[0] + '\\r\\nvar b = ' + variables[1] + '\\r\\na + b' })",
		"result": "(function (variables) { return variables[0] + variables[1] })"
	},
  {
		"name": "var subtraction",
		"level": 3,
		"variables": ["(Math.floor(Math.random() * 6) + 1)", "(Math.floor(Math.random() * 6) + 1)"],
		"template": "(function (variables) { return 'var a = ' + variables[0] + '\\r\\nvar b = ' + variables[1] + '\\r\\na - b' })",
		"result": "(function (variables) { return variables[0] - variables[1] })"
	},
  {
    "name": "concat string",
    "level": 4,
    "variables": ["(Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 2))", "(Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 2))"],
    "template": "(function (variables) { return 'var stringA = \\''  + variables[0] + '\\'\\r\\nvar stringB = \\'' + variables[1] + '\\'\\r\\nstringA + stringB' })",
    "result": "(function (variables) { return variables[0] + variables[1] })"
  },
  {
		"name": "concat string like number",
		"level": 5,
		"variables": ["(Math.floor(Math.random() * 7))", "(Math.floor(Math.random() * 7))"],
		"template": "(function (variables) { return 'var a = \\''  + variables[0] + '\\'\\r\\nvar b = \\'' + variables[1] + '\\'\\r\\na + b' })",
		"result": "(function (variables) { return variables[0].toString() + variables[1].toString() })"
	},
  {
		"name": "var addition",
		"level": 5,
		"variables": ["(Math.floor(Math.random() * 6) + 1)", "(Math.floor(Math.random() * 6) + 1)"],
		"template": "(function (variables) { return 'var a = ' + variables[0] + '\\r\\nvar b = ' + variables[1] + '\\r\\na + b' })",
		"result": "(function (variables) { return variables[0] + variables[1] })"
	},
  {
		"name": "length of string",
		"level": 6,
		"variables": ["(Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, Math.floor(Math.random() * 6) + 1))"],
		"template": "(function (variables) { return 'var string = \\''  + variables[0] + '\\'\\r\\string.length' })",
		"result": "(function (variables) { return variables[0].length })"
	},
  {
    "name": "==",
    "level": 7,
    "variables": ["(Math.floor(Math.random() * 3) + 1)", "(Math.floor(Math.random() * 3) + 1)"],
    "template": "(function (variables) { return variables[0] + ' == ' + variables[1] })",
    "result": "(function (variables) { return variables[0] == variables[1] })"
  },
  {
    "name": ">",
    "level": 7,
    "variables": ["(Math.floor(Math.random() * 12) + 1)", "(Math.floor(Math.random() * 12) + 1)"],
    "template": "(function (variables) { return variables[0] + ' > ' + variables[1] })",
    "result": "(function (variables) { return variables[0] > variables[1] })"
  },
  {
    "name": "<",
    "level": 7,
    "variables": ["(Math.floor(Math.random() * 12) + 1)", "(Math.floor(Math.random() * 12) + 1)"],
    "template": "(function (variables) { return variables[0] + ' < ' + variables[1] })",
    "result": "(function (variables) { return variables[0] < variables[1] })"
  },
  {
    "name": ">=",
    "level": 7,
    "variables": ["(Math.floor(Math.random() * 12) + 1)", "(Math.floor(Math.random() * 12) + 1)"],
    "template": "(function (variables) { return variables[0] + ' >= ' + variables[1] })",
    "result": "(function (variables) { return variables[0] >= variables[1] })"
  },
  {
    "name": "<=",
    "level": 7,
    "variables": ["(Math.floor(Math.random() * 12) + 1)", "(Math.floor(Math.random() * 12) + 1)"],
    "template": "(function (variables) { return variables[0] + ' <= ' + variables[1] })",
    "result": "(function (variables) { return variables[0] <= variables[1] })"
  },
  {
    "name": "== string number",
    "level": 8,
    "variables": ["(Math.floor(Math.random() * 12) + 1)"],
    "template": "(function (variables) { return variables[0] + ' == \\'' + variables[0] + '\\'' })",
    "result": "(function (variables) { return true })"
  },
  {
    "name": "=== string number",
    "level": 8,
    "variables": ["(Math.floor(Math.random() * 12) + 1)"],
    "template": "(function (variables) { return variables[0] + ' === \\'' + variables[0] + '\\'' })",
    "result": "(function (variables) { return false })"
  },
  {
    "name": "!=",
    "level": 9,
    "variables": ["(Math.floor(Math.random() * 3) + 1)", "(Math.floor(Math.random() * 3) + 1)"],
    "template": "(function (variables) { return variables[0] + ' != ' + variables[1] })",
    "result": "(function (variables) { return variables[0] != variables[1] })"
  },
  {
    "name": "!= string number",
    "level": 10,
    "variables": ["(Math.floor(Math.random() * 12) + 1)"],
    "template": "(function (variables) { return variables[0] + ' != \\'' + variables[0] + '\\'' })",
    "result": "(function (variables) { return false })"
  },
  {
    "name": "!== string number",
    "level": 10,
    "variables": ["(Math.floor(Math.random() * 12) + 1)"],
    "template": "(function (variables) { return variables[0] + ' !== \\'' + variables[0] + '\\'' })",
    "result": "(function (variables) { return true })"
  },
  {
		"name": "length of Array",
		"level": 11,
		"variables": ["(Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, Math.floor(Math.random() * 6) + 1))"],
		"template": "(function (variables) { return 'var Array = ['  + variables[0].split('') + ']\\r\\Array.length' })",
		"result": "(function (variables) { return variables[0].length })"
	},
  {
		"name": "Select in Array",
		"level": 12,
		"variables": [["index0","index1","index2","index3"], "(Math.floor(Math.random() * 3))"],
		"template": "(function (variables) { return 'var Array = [\\'index0\\',\\'index1\\',\\'index2\\',\\'index3\\']\\r\\Array[' + variables[1] + ']' })",
		"result": "(function (variables) { return variables[0][variables[1]] })"
	},
  {
		"name": "var addition ecrasement",
		"level": 13,
		"variables": ["(Math.floor(Math.random() * 6) + 1)", "(Math.floor(Math.random() * 6) + 6)","(Math.floor(Math.random() * 6) + 1)"],
		"template": "(function (variables) { return 'var a = ' + variables[0] + '\\r\\na = ' + variables[1] + '\\r\\na + ' + variables[2] })",
		"result": "(function (variables) { return variables[1] + variables[2] })"
	},
  {
		"name": "var subtraction ecrasement",
		"level": 13,
		"variables": ["(Math.floor(Math.random() * 6) + 1)", "(Math.floor(Math.random() * 6) + 6)","(Math.floor(Math.random() * 6) + 1)"],
		"template": "(function (variables) { return 'var a = ' + variables[0] + '\\r\\na = ' + variables[1] + '\\r\\na - ' + variables[2] })",
		"result": "(function (variables) { return variables[1] - variables[2] })"
	},
  {
		"name": "var multiplication ecrasement",
		"level": 13,
		"variables": ["(Math.floor(Math.random() * 5) + 1)", "(Math.floor(Math.random() * 5) + 5)","(Math.floor(Math.random() * 6) + 1)"],
		"template": "(function (variables) { return 'var a = ' + variables[0] + '\\r\\na = ' + variables[1] + '\\r\\na * ' + variables[2] })",
		"result": "(function (variables) { return variables[1] * variables[2] })"
	},
  {
		"name": "var addition ecrasement string",
		"level": 14,
		"variables": ["(Math.floor(Math.random() * 6) + 1)", "(Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, Math.floor(Math.random() * 2) + 1))", "(Math.floor(Math.random() * 6) + 1)"],
		"template": "(function (variables) { return 'var a = ' + variables[0] + '\\r\\na = ' + variables[1] + '\\r\\na + ' + variables[2] })",
		"result": "(function (variables) { return variables[1] + variables[2] })"
	},
  {
		"name": "var addition ecrasement string link number",
		"level": 14,
    "variables": ["(Math.floor(Math.random() * 6) + 1)", "(Math.floor(Math.random() * 6) + 6)","(Math.floor(Math.random() * 6) + 1)"],
		"template": "(function (variables) { return 'var a = ' + variables[0] + '\\r\\na = \\'' + variables[1] + '\\'\\r\\na + ' + variables[2] })",
		"result": "(function (variables) { return variables[1].toString() + variables[2] })"
	},
  {
		"name": "var addition ecrasement string link number + 1",
		"level": 14,
    "variables": ["(Math.floor(Math.random() * 6) + 1)", "(Math.floor(Math.random() * 6) + 6)","(Math.floor(Math.random() * 6) + 1)"],
		"template": "(function (variables) { return 'var a = \\'' + variables[0] + '\\'\\r\\na = ' + variables[1] + '\\r\\na + ' + variables[2] })",
		"result": "(function (variables) { return variables[1] + variables[2] })"
	},
  {
		"name": "function",
		"level": 15,
    "variables": ["(Math.floor(Math.random() * 100) + 1)"],
		"template": "(function (variables) { return 'var life = 100;\\r\\nfunction takeDamages(amount) {\\r\\nlife -= amount\\r\\nreturn life;\\r\\n}\\r\\ntakeDamages(' + variables[0] + ')'})",
		"result": "(function (variables) { return 100 - variables[0]})"
	},
  {
		"name": "function",
		"level": 15,
    "variables": ["(Math.floor(Math.random() * 30000) + 1)"],
		"template": "(function (variables) { return 'var xp = 10000;\\r\\nfunction winBattle(experience) {\\r\\npv += experience\\r\\nreturn pv;\\r\\n}\\r\\nwinBattle(' + variables[0] + ')'})",
		"result": "(function (variables) { return 10000 + variables[0]})"
	}
]
